{"version":3,"sources":["ImageSlider.js","MyForm.js","App.js","reportWebVitals.js","index.js"],"names":["ImageSlider","listItems","Array","from","Number","this","props","imglength","keys","map","number","src","name","alt","style","overflowX","Component","MyForm","submitForm","bind","state","status","onSubmit","action","method","type","width","height","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","React","App","id","overflowY","trigger","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEqBA,E,uKAGP,IAAD,OAECC,EADUC,MAAMC,KAAKD,MAAME,OAAOC,KAAKC,MAAMC,YAAYC,QACrCC,KAAI,SAACC,GAAD,OAC9B,qBAAKC,IAAK,WAAW,CAAC,EAAKL,MAAMM,MAAM,IAAI,CAAC,EAAKN,MAAMM,MAAM,IAAI,CAACF,GAAQ,OAAQG,IAAI,QAEtF,OACI,qCAEA,6BAAKR,KAAKC,MAAMM,OAChB,qBAAKE,MAAO,CAACC,UAAW,UAAxB,SACI,4BAAId,a,GAbqBe,a,uBCApBC,E,kDACnB,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,MAAQ,CACXC,OAAQ,IAJO,E,qDAQT,IACAA,EAAWhB,KAAKe,MAAhBC,OACR,OACE,uBACEC,SAAUjB,KAAKa,WACfK,OAAO,kCACPC,OAAO,OAHT,UAKE,2CACA,uBAAOC,KAAK,QAAQb,KAAK,UACzB,uBACA,6CACA,uBACA,uBAAOa,KAAK,OAAOb,KAAK,UAAUE,MAAO,CAACY,MAAM,IAAKC,OAAO,OAC5D,uBACY,YAAXN,EAAuB,wCAAiB,4CAC7B,UAAXA,GAAsB,gE,iCAKlBO,GAAK,IAAD,OACbA,EAAGC,iBACH,IAAMC,EAAOF,EAAGG,OACVC,EAAO,IAAIC,SAASH,GACpBI,EAAM,IAAIC,eAChBD,EAAIE,KAAKN,EAAKN,OAAQM,EAAKP,QAC3BW,EAAIG,iBAAiB,SAAU,oBAC/BH,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeJ,eAAeK,OACnB,MAAfN,EAAIb,QACNS,EAAKW,QACL,EAAKC,SAAS,CAAErB,OAAQ,aAExB,EAAKqB,SAAS,CAAErB,OAAQ,YAG5Ba,EAAIS,KAAKX,O,GA9CuBY,IAAM5B,WCMrB6B,G,6KAEjB,OACE,qCACA,8DACA,sBAAKC,GAAG,YAAYhC,MAAO,CAACiC,UAAW,UAAvC,UACE,cAAC,EAAD,CAAanC,KAAK,QAAQL,UAAU,MACpC,cAAC,EAAD,CAAaK,KAAK,OAAOL,UAAU,MACnC,cAAC,EAAD,CAAaK,KAAK,UAAUL,UAAU,MACtC,cAAC,EAAD,CAAaK,KAAK,OAAOL,UAAU,SAErC,cAAC,IAAD,CAAayC,QAAQ,aAArB,SACE,cAAC,EAAD,a,GAZyBhC,cCIlBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.529e0ecc.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class ImageSlider extends Component {\n\n\n    render() {\n        const numbers = Array.from(Array(Number(this.props.imglength)).keys())\n        const listItems = numbers.map((number) =>\n        <img src={'./dollz/'+[this.props.name]+'/'+[this.props.name]+'-'+[number]+'.png'} alt=''/>\n        );\n        return (\n            <>\n            \n            <h3>{this.props.name}</h3>\n            <div style={{overflowX: 'scroll'}}>\n                <p>{listItems}</p>\n            </div>\n            </>\n        )\n    }\n}\n","import React from \"react\";\n\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n      <form\n        onSubmit={this.submitForm}\n        action=\"https://formspree.io/f/xleopqyk\"\n        method=\"POST\"\n      >\n        <label>Email:</label>\n        <input type=\"email\" name=\"email\" />\n        <br/>\n        <label>Message:</label>\n        <br/>\n        <input type=\"text\" name=\"message\" style={{width:500, height:200}}/>\n        <br/>\n        {status === \"SUCCESS\" ? <p>Thanks!</p> : <button>Submit</button>}\n        {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n      </form>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}","import React, { Component } from 'react'\nimport ImageSlider from './ImageSlider'\nimport Collapsible from 'react-collapsible';\nimport MyForm from './MyForm';\nimport './App.css'\n\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n      <h2>Click image to put in canvas</h2>\n      <div id='image-box' style={{overflowY: 'scroll'}}>\n        <ImageSlider name='heads' imglength='2'/>\n        <ImageSlider name='tops' imglength='2'/>\n        <ImageSlider name='bottoms' imglength='2'/>\n        <ImageSlider name='body' imglength='2'/>\n      </div>\n      <Collapsible trigger=\"Contact Us\">\n        <MyForm/>\n      </Collapsible>\n      </>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}